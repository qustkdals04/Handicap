<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="user">   
	<!--   회원가입(일반)
   <insert id="insertuser" parameterType="com.handicap.model.beans.UserVO">
     insert into member (userid,passwd,email,name,nickname,phone,pquestion,panswer,usergrade) 
     values (#{userid}, #{passwd}, #{email}, #{name}, #{nickname}, #{phone}, #{pquestion}, #{panswer}, 1)
   </insert> -->
   
   <!-- 회원가입  -->
   <insert id="insert" parameterType="com.handicap.model.beans.UserVO">
   	insert into member (userid,passwd,email,name,nickname,phone,pqid,panswer,usergrade,companyno,companyceoname,companyaddr,companytype,image)
   	values (#{userid}, #{passwd}, #{email}, #{name}, #{nickname}, #{phone}, #{pqid}, #{panswer}, #{usergrade},#{companyno},#{companyceoname},#{companyaddr},#{companytype},#{image})
   </insert>   
   
   <!-- 아이디목록 -->
   <select id="selectId" resultType="com.handicap.model.beans.UserVO">
     select userid from member
   </select>  
   
   <!-- 닉네임목록 -->
   <select id="selectNick" resultType="com.handicap.model.beans.UserVO" >
     select nickname from member
   </select>
   
   <!-- ID에 맞는 닉네임찾기 -->
   <select id="findNick" parameterType="string" resultType="string">
   	select nickname from member where userid=#{userid}
   </select>
   
   <!-- 닉네임에 맞는 ID찾기 -->
   <select id="findId" parameterType="string" resultType="string">
   	select userid from member where nickname=#{nickname}
   </select>
   
   <!-- ID에 맞는 비밀번호찾기 -->
   <select id="findPasswd" parameterType="string" resultType="string">
   	select passwd from member where userid=#{userid}
   </select>
   
   <!-- 메시지전송 -->
   <insert id="messageinsert"  parameterType="com.handicap.model.beans.MessageVO" >
   	insert into message (sender,recipient,contents,senddate)
   	values (#{sender},#{recipient},#{contents},sysdate)
   </insert>
   
   <!-- 받은메시지 리스트 -->
   <select id="messagelist" parameterType="map" resultType="com.handicap.model.beans.MessageVO">
   	<!-- select * from (select messageno,sender,recipient,contents,status,senddate,rownum r 
   	from (select * from message where recipient=#{recipient} order by senddate desc)) where r between #{startRow} and #{endRow} -->
   	select * from (select messageno, nickname, recipient,contents,status,senddate,rownum r from (select * from message inner join member on message.sender=member.userid where recipient=#{recipient} order by senddate desc)) where r between #{startRow} and #{endRow}
   </select>
   
   <!-- 보낸메시지 리스트 -->
   <select id="messagesendlist" parameterType="map" resultType="com.handicap.model.beans.MessageVO">
   	<!-- select * from (select messageno,sender,recipient,contents,status,senddate,rownum r 
   	from (select * from message where sender=#{sender} order by senddate desc)) where r between #{startRow} and #{endRow} -->
   	select * from (select messageno, sender, nickname,contents,status,senddate,rownum r from (select * from message inner join member on message.recipient=member.userid where sender=#{sender} order by senddate desc)) where r between #{startRow} and #{endRow}
   </select>
   
   <!-- select * from message where recipient=#{recipient} order by senddate desc -->
   <!-- 보낸메시지 상세보기 + 상세보기시 상태 읽음으로 변경-->
   <select id="messagesendcontent" parameterType="int" resultType="com.handicap.model.beans.MessageVO">
   	select nickname, contents, senddate from message inner join member on message.recipient=member.userid where messageno=#{messageno}   	
   </select>
   
   <!-- select * from message where recipient=#{recipient} order by senddate desc -->
   <!-- 받은메시지 상세보기 + 상세보기시 상태 읽음으로 변경-->
   <select id="messagecontent" parameterType="int" resultType="com.handicap.model.beans.MessageVO">
   	select nickname, contents, senddate from message inner join member on message.sender=member.userid where messageno=#{messageno}   	
   </select>
   <update id="messageupdate" parameterType="int">
   	update message set status=2 where messageno=#{messageno}
   </update>
   
   <!-- 받은메시지리스트 총메시지 갯수 구하기 --> 	
   <select id="messagecount" parameterType="string" resultType="int">
   	select count(*) from message where recipient=#{recipient}
   </select>
   
   <!-- 보낸메시지리스트 총메시지 갯수 구하기 --> 	
   <select id="messagesendcount" parameterType="string" resultType="int">
   	select count(*) from message where sender=#{sender}
   </select>
     
   <!-- 메시지 삭제 -->
   <delete id="messagedelete" parameterType="int">
   	delete message where messageno=#{messageno}
   </delete>
   
   <!-- 주소찾기 -->
   <select id="findAddress" parameterType="string" resultType="com.handicap.model.beans.ZipcodeVO">
   	select * from zipcode where dong like #{dong}
   </select>

	<!-- 사업자번호목록 -->
   <select id="selectNo" resultType="com.handicap.model.beans.UserVO" >
     select companyno from member where companyno is not null
   </select>
   
   <!-- ID검색 -->
   <select id="searchId" parameterType="Map" resultType="string">
   	select userid from member where name=#{name} and email=#{email}
   </select>
   <!-- PW검색 -->
   <select id="searchPw" parameterType="Map" resultType="string">
   	select passwd from member where userid=#{userid} and pquestion=#{pquestion} and panswer=#{panswer}
   </select>
   
   <!-- 로그인한 아이디로 회원등급 가져오기 -->
   <select id="searchGrade" parameterType="string" resultType="int">
   	select usergrade from member where userid=#{userid}
   </select>
   
   <!-- 회원정보 가져오기 -->
   <select id="selectmember" parameterType="string" resultType="com.handicap.model.beans.UserVO">
   	select member.*, pq.pquestion from member inner join pq on pq.pqid=member.pqid where userid=#{userid}
   </select>
   
   <!-- 평가여부확인 -->
   <select id="eval" parameterType="Map" resultType="int">
   	select count(*) from evalinfo where boardno=#{boardno} and no=#{no} and nickname=#{nickname} and commentno=#{commentno}
   </select>
   
   <!-- 회원정보 업데이트 -->
   <update id="memberupdate" parameterType="com.handicap.model.beans.UserVO">
  	update member set passwd=#{passwd}, nickname=#{nickname},email=#{email}, name=#{name}, phone=#{phone}, pqid=#{pqid}, panswer=#{panswer}, companyceoname=#{companyceoname},companyaddr=#{companyaddr},companytype=#{companytype}
  	where userid=#{userid}
   </update>
   
   <!-- 회원정보 삭제 -->
   <delete id="memberdelete" parameterType="string">
   	delete from member where userid=#{userid} 
   </delete>
   
   <!-- 마이페이지 -->
   <select id="myprofile" parameterType="string" resultType="com.handicap.model.beans.UserVO">
    select image, profile from member where userid=#{userid}
   </select>
   
   <!-- 프로필업데이트 -->
   <update id="profileupdate" parameterType="map">
   	update member set profile=#{profile} where userid=#{userid}
   </update>
   <!-- 프로필가져오기 -->
   <select id="getprofile" parameterType="string" resultType="string">
   	select profile from member where userid=#{userid}
   </select>
   <!-- 내가쓴게시글가져오기 -->
   <select id="mybbs" parameterType="string" resultType="com.handicap.model.beans.BbsVO">
   	select * from bbs where author=#{author}
   </select>
</mapper>
<!-- user.xml -->






